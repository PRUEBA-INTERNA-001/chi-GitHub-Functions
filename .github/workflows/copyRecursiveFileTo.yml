name: Create GitHub Release

on:
  workflow_call:
    inputs:
        environment:
          description: "Nombre del entorno GitHub (dev, homo, prod)"
          required: true
          type: string
        release_tag:
          description: "Tag del release a descargar"
          required: false
          type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    
    steps:
    
    - name: Verificar lista de archivos a incluir y excluir
      id: set-paths
      run: |
        if [ -f artifact-paths.txt ]; then
          echo "paths<<EOF" >> $GITHUB_OUTPUT
          cat artifact-paths.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "paths=**/*" >> $GITHUB_OUTPUT
        fi

    - name: Mostrar valor de MASK_INCLUDE_FILES
      run: echo "MASK_INCLUDE_FILES = ${{ steps.set-paths.outputs.paths }}"

    - name: Descargar release con tag
      if: ${{ inputs.environment != 'desarrollo' }}
      uses: robinraju/release-downloader@v1.8
      with:
        repository: ${{ github.repository }}
        tag: ${{ inputs.release_tag }}
        fileName: ${{ vars.MASK_INCLUDE_FILES }}
        out-file-path: "deployment-files"

    - name: Checkout
      if: ${{ inputs.environment == 'desarrollo' }}
      uses: actions/checkout@v3

    - name: Mostrar lista de servidores
      run: 'echo "servidores: ${{ vars.SERVIDORES }}"'

    - name: Mostrar path
      run: 'echo "Destino: ${{ vars.PATH_DESTINO }}"'
         
    - name: Copia a path destino
      run: 'echo "Copia a: ${{ vars.PATH_DESTINO }}"'

    - name: Subir archivos como artefacto
      if: ${{ inputs.environment == 'desarrollo' }}
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: ${{ steps.set-paths.outputs.paths }}
        retention-days: 1