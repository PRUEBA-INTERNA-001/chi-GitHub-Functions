name: SonarCloud Quality Gate

on:
  workflow_call:
    inputs:
      deploy_platform:
        description: "Plataforma de despliegue"
        required: true
        default: "linux"
        type: string

jobs:
  sonar-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para análisis completo, incluye histórico de Git
      
      - name: Descargar artefacto
        if: ${{ inputs.deploy_platform == 'wls' }}
        uses: actions/download-artifact@v4
        with:
          name: artifacts  # Nombre del artefacto subido
          path: .
      
      - name: Set up JDK
        if: ${{ inputs.deploy_platform == 'wls' }}
        uses: actions/setup-java@v3
        with:
          java-version: '11'  # Ajusta si usas otra versión
          distribution: 'temurin'

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        with:
          projectBaseDir: ./
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Wait for analysis processing
        run: |
          ls -lrat .scannerwork/
          sleep 30  # Espera para asegurar que el análisis esté completo
      
      - name: Check if project exists in SonarCloud (skip Quality Gate if first run)
        id: check_sonar_project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        run: | # Consultar la API de SonarCloud para ver si el proyecto ya existe
            response=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/components/show?component=${SONAR_PROJECT_KEY}")
            if [[ "$response" == *"not found"* ]]; then
              echo "Primer análisis: omitiendo Quality Gate (proyecto nuevo en SonarCloud)."
              echo "qualitygate_needed=false" >> $GITHUB_OUTPUT
            else
              echo "Proyecto ya existe en SonarCloud: verificando Quality Gate."
              echo "qualitygate_needed=true" >> $GITHUB_OUTPUT
            fi
      
      - name: Wait for Quality Gate
        if: steps.check_sonar_project.outputs.qualitygate_needed == 'true'
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
